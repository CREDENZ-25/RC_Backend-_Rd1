worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Define rate limit zone (5 requests per second per IP)
    limit_req_zone $binary_remote_addr zone=api_limit:20m rate=2r/s;
    map $http_user_agent $block_bad_user_agent {
        default 0;
        "~*curl" 1;
        "~*wget" 1;
        "~*python-requests" 1;
        "~*libwww-perl" 1;
        "~*Go-http-client" 1;
        "~*java" 1;
        "~*httpclient" 1;
        "~*http-client" 1;
        "~*scrapy" 1;
        "~*urllib" 1;
        "~*perl" 1;
        "~*php" 1;
        "~*pycurl" 1;
        "~*http_request2" 1;
        "~*mechanize" 1;
        "~*node-fetch" 1;
        "~*okhttp" 1;
        "~*apache-httpclient" 1;
        "~*winhttp" 1;
        "~*wget2" 1;
        "~*lwp::simple" 1;
        "~*python-urllib" 1;
        "~*python-httpx" 1;
        "~*httpx" 1;
        # "~*axios" 1;
        # "~*PostmanRuntime" 1; turn onn when postman test required
    }

    server {
        listen 80;
        server_name rcroundonebackend.api.credenz.co.in; #change domain name here

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name rcroundonebackend.api.credenz.co.in nth25;
        server_tokens off; # Hide Nginx version

        ssl_certificate /etc/letsencrypt/live/rcroundonebackend.api.credenz.co.in/fullchain.pem; #change domain name here
        ssl_certificate_key /etc/letsencrypt/live/rcroundonebackend.api.credenz.co.in/privkey.pem;
        # include /etc/letsencrypt/options-ssl-nginx.conf;
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Global User-Agent Blocking
        if ($block_bad_user_agent) {
            return 403;
        }

        # Allow only specific origins
        set $allowed_origin "";
        if ($http_origin ~* "^https://(rc\.credenz\.co\.in)$") {
            set $allowed_origin "true";
        }

        # Rate limit API requests
        location / {
            limit_req zone=api_limit burst=20 nodelay;
            if ($allowed_origin = "") {
                return 403;
            }
            proxy_pass http://backend:5000/; #put your docker conatiner name here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;
        }
    }
}
